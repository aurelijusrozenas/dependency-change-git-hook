#!/usr/bin/env bash

IS_DEBUG=false

$IS_DEBUG && echo -e "\e[93mPOST-CHECKOUT HOOK\e[0m"

# https://stackoverflow.com/a/20892987/846432
PREV_HEAD=$1
NEW_HEAD=$2
CHECKOUT_TYPE=$3
[ "$CHECKOUT_TYPE" = 1 ] && CHECKOUT_TYPE='branch' || CHECKOUT_TYPE='file'

$IS_DEBUG && echo -e "\e[93mCheckout type: $CHECKOUT_TYPE\e[0m"
$IS_DEBUG && echo -e "\e[93mprev HEAD: $(git name-rev --name-only "$PREV_HEAD")\e[0m"
$IS_DEBUG && echo -e "\e[93mnew HEAD: $(git name-rev --name-only "$NEW_HEAD")\e[0m"

if [ $CHECKOUT_TYPE == 'branch' ]; then
    $IS_DEBUG && echo -e "\e[93mChanged branch.\e[0m"
    CHANGED_FILES="$(git diff-tree -r --name-only --no-commit-id "$PREV_HEAD" "$NEW_HEAD")"
    if [[ -z "${CHANGED_FILES}" ]]; then
        $IS_DEBUG && echo -e "\e[93mNo changed files.\e[0m"
        exit;
    else
        $IS_DEBUG && echo -e "\e[93mCHANGED FILES:\e[0m"
        $IS_DEBUG && echo -e "\e[93m${CHANGED_FILES}\e[0m"
        $IS_DEBUG && echo -e "\e[93mEND changed files\e[0m"
    fi
else
    $IS_DEBUG && echo -e "\e[93mChecked out file.\e[0m"
    # can't anything since hook does not know which file was changed
    exit
fi

is_file_changed() {
    # file is changed and exists
    echo "$CHANGED_FILES" | grep -E --quiet "$1" && test -f "$1"
}

# get current script dir
# http://stackoverflow.com/a/246128/846432
DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

if is_file_changed package.json | is_file_changed yarn.lock; then
    echo -e "\e[93mGIT HOOK: yarn dependencies change detected.\e[0m"
    if [[ ! -f ${DIR}/post-yarn-dependencies-update.sh ]]; then
        # file does not exist
        echo -e "\e[93mSuggestion: To run command after yarn dependencies change detected create file \"${DIR}/post-yarn-dependencies-update.sh\"\e[0m"
    elif [[ ! -x ${DIR}/post-yarn-dependencies-update.sh ]]; then
        # file does not have "x" permission
        echo -e "\e[101mWARNING: Make file \"${DIR}/post-yarn-dependencies-update.sh\" executable.\e[0m"
    else
        # file exists
        echo -e "\e[93mRunning \"${DIR}/post-yarn-dependencies-update.sh\"\e[0m"
        "${DIR}/post-yarn-dependencies-update.sh"
    fi
else
    $IS_DEBUG && echo -e "\e[93mGIT HOOK: yarn dependencies change NOT detected.\e[0m"
fi

if is_file_changed composer.lock | is_file_changed composer.json; then
    echo -e "\e[93mGIT HOOK: composer dependencies change detected.\e[0m"
    if [[ ! -f ${DIR}/post-composer-dependencies-update.sh ]]; then
        # file does not exist
        echo -e "\e[93mSuggestion: To run command after composer dependencies change detected create file \"${DIR}/post-composer-dependencies-update.sh\"\e[0m"
    elif [[ ! -x ${DIR}/post-composer-dependencies-update.sh ]]; then
        # file does not have "x" permission
        echo -e "\e[101mWARNING: Make file \"${DIR}/post-composer-dependencies-update.sh\" executable.\e[0m"
    else
        # file exists
        echo -e "\e[93mRunning \"${DIR}/post-composer-dependencies-update.sh\"\e[0m"
        "${DIR}/post-composer-dependencies-update.sh"
    fi
else
    $IS_DEBUG && echo -e "\e[93mGIT HOOK: composer dependencies change NOT detected.\e[0m"
fi
